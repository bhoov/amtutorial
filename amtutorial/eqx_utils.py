# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/lib/02_eqx_utils.qmd.

# %% auto 0
__all__ = ['monkey_patch']

# %% ../nbs/lib/02_eqx_utils.qmd 2
from typing import *
from dataclasses import dataclass
import equinox as eqx
import functools as ft

# %% ../nbs/lib/02_eqx_utils.qmd 3
@dataclass
class _AtWrapper:
    _tree_at: Callable
    def set(self, replace): return self._tree_at(replace=replace)
    def set_fn(self, replace_fn:Callable): return self._tree_at(replace_fn=replace_fn)

def _at(pytree, where, is_leaf=None) -> _AtWrapper:
    "JAX-like model surgery for eqx.Modules"
    return _AtWrapper(ft.partial(eqx.tree_at, where=where, pytree=pytree, is_leaf=is_leaf))

# %% ../nbs/lib/02_eqx_utils.qmd 5
def monkey_patch():
    "Monkey patch the `at` method into an `eqx.Module`"
    eqx.Module.at = _at
